<?xml version="1.0" ?>
<!DOCTYPE PISI SYSTEM "https://pisilinux.org/projeler/pisi/pisi-spec.dtd">
<PISI>
    <Source>
        <Name>expected</Name>
        <Homepage>https://github.com/TartanLlama/expected</Homepage>
        <Packager>
            <Name>Safa Arıman</Name>
            <Email>safa@ariman.gen.tr</Email>
        </Packager>
        <License>CC0</License>
        <IsA>library</IsA>
        <Summary>Single header implementation of std::expected with functional-style extensions.</Summary>
        <Description>std::expected is proposed as the preferred way to represent object which will either have an expected value, or an unexpected value giving information about why something failed. Unfortunately, chaining together many computations which may fail can be verbose, as error-checking code will be mixed in with the actual programming logic. This implementation provides a number of utilities to make coding with expected cleaner.</Description>
        <Archive sha1sum="ae311c9ad746d944d18e8cf873d0b1f04bff4acb" type="targz">https://github.com/TartanLlama/expected/archive/refs/tags/v1.1.0.tar.gz</Archive>
        <BuildDependencies>
            <Dependency>cmake</Dependency>
            <Dependency>ninja</Dependency>
            <Dependency>catch2</Dependency>
        </BuildDependencies>
    </Source>

    <Package>
        <Name>expected-devel</Name>
        <Files>
            <Path fileType="header">/usr/include</Path>
            <Path fileType="data">/usr/share</Path>
        </Files>
    </Package>

    <History>
        <Update release="2">
            <Date>2024-08-18</Date>
            <Version>1.1.0</Version>
            <Comment>Version bump.</Comment>
            <Name>Safa Arıman</Name>
            <Email>safa@ariman.gen.tr</Email>
        </Update>
        <Update release="1">
            <Date>2020-03-17</Date>
            <Version>1.0.0</Version>
            <Comment>First release</Comment>
            <Name>Safa Arıman</Name>
            <Email>safa@ariman.gen.tr</Email>
        </Update>
    </History>
</PISI>
